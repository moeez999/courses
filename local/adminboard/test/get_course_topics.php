<?php
ob_start(); // Start output buffering
require_once('../../../config.php'); // Moodle config file for database connection
ob_end_clean(); // Clear any output generated by config.php

global $DB;

if (isset($_POST['userid'],$_POST['cohortid'])) {

    $cohortId = intval($_POST['cohortid']);
    $userid = intval($_POST['userid']);

// SQL query to fetch all courses except the one with id = 1
$sql_courses = "SELECT id, fullname, shortname FROM {course} WHERE id <> 1";

// Execute the query
$courses = $DB->get_records_sql($sql_courses);

// Initialize an array to hold all topics
$all_topics = [];

if ($courses) {
    foreach ($courses as $course) {
        // SQL query to fetch all topics (sections) for the current course
        $sql_topics = "SELECT id, name
                       FROM {course_sections}
                       WHERE course = :courseid
                           AND name IS NOT NULL
                           AND visible = 1"; // Exclude empty and hidden sections

        $topics = $DB->get_records_sql($sql_topics, ['courseid' => $course->id]);

        // Add the topics for the current course to the array
        if ($topics) {
            // SQL Query
                $sql = "SELECT * 
                FROM {cohorts_topics_completion_data} 
                WHERE cohortid = :cohortid 
                ORDER BY id DESC 
                LIMIT 1";

                // Parameters array
                $params = [
                'cohortid' => $cohortId
                ];

                // Execute the query
                $recordd = $DB->get_record_sql($sql, $params);
                $currentTopicc = 3;
                if($recordd)
                {
                    if($recordd->percentage !=100)
                    {
                        $currentTopicc = 1;
                    }else{
                        $currentTopicc = 0;
                    }
                }

                // Query to fetch all records except the last one
                    $sql1 = "
                    SELECT * 
                    FROM {cohorts_topics_completion_data} 
                    WHERE cohortid = :cohortid1
                    AND id != (
                        SELECT MAX(id) 
                        FROM {cohorts_topics_completion_data} 
                        WHERE cohortid = :cohortid2
                    )
                    ";

                    // Parameters array
                    $params1 = [
                        'cohortid1' => $cohortId,
                        'cohortid2' => $cohortId,
                    ];

                // Execute the query
                $records = $DB->get_records_sql($sql1, $params1);
                // Convert $records to an array of section IDs for easier comparison
                $completedSections = array_column($records, 'sectionid');
            foreach ($topics as $topic) {
                $disable = false;
                $percentage = null; // Default percentage
                $status = null; // Default status
            
                // Iterate through $records to find a matching section ID
                foreach ($records as $record) {
                    if ($topic->id == $record->sectionid) {
                        $percentage = $record->percentage;
                        $status = $record->status; // Assuming $record has a 'status' field
                        if ($percentage == 100) {
                            $disable = true; // Disable this topic
                        }else{
                            $disable = false;
                        } 
                        break; // Exit loop since match is found
                    }
                }

                if($topic->id == $recordd->sectionid )
                {
                    $currentTopic = $currentTopicc;
                    $percentage = $recordd->percentage;
                    if ($percentage == 100) {
                        $disable = true; // Disable this topic
                    }else{
                        $disable = false;
                    } 
                }else{
                    $currentTopic = 3;
                }
                
                $all_topics[] = [
                    'course_id' => $course->id,
                    'course_fullname' => $course->fullname,
                    'course_shortname' => $course->shortname,
                    'topic_id' => $topic->id,
                    'topic_name' => $topic->name,
                    'display' => $currentTopic, // Set to 0 or 1 as needed
                    'disabled' => $disable,
                    'percentage' => $percentage,
                ];
            }
        }
    }
} else {
    echo "No courses found.";
}


// Send the topics array as JSON to the frontend
header('Content-Type: application/json');
// Return the results in JSON format
echo json_encode(['topics' => $all_topics, 'currentTopic' => $currentTopic]);
exit;
}
?>