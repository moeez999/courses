{"version":3,"file":"topics.min.js","sources":["../src/topics.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\nimport 'core/inplace_editable';\nimport Notification from 'core/notification';\nimport Ajax from 'core/ajax';\nimport {\n    get_strings as getStrings,\n} from 'core/str';\n\nexport const init = (cmid) => {\n        registerEventListeners(cmid);\n};\n\n/**\n * Function to register and defines event listeners\n * @param {int} cmid\n */\nfunction registerEventListeners(cmid) {\n\n    const deletebtns = document.querySelectorAll('#cardbox-topics .cardbox-edittopics-delete-button');\n    deletebtns.forEach(btn => {\n        const topic = btn.closest('#cardbox-topic-in-review');\n        const topicid = topic.getAttribute('data-topicid');\n        const topictitel = topic.getAttribute('data-titel');\n        btn.addEventListener('click', () => {\n            deletetopic(cmid, topicid, topictitel);\n        });\n    });\n\n    const editbtns = document.querySelectorAll('#cardbox-topics .cardbox-edittopics-edit-button');\n    editbtns.forEach(btn => {\n        const edit = btn.closest('#cardbox-topic-in-review');\n        const topicid = edit.getAttribute('data-topicid');\n\n        btn.addEventListener('click', () => {\n            const topictitel = edit.getAttribute('data-titel');\n            edittopic(cmid, topicid, topictitel);\n        });\n    });\n\n    document.getElementById(\"cardbox-submit-new-topic\").addEventListener('click', () => {\n        savenewtopic(cmid);\n    });\n}\n/**\n * Function to delete a topic from Cardbox instance\n * @param {int} cmid\n * @param {int} topicid\n * @param {string} topictitel\n */\nfunction deletetopic(cmid, topicid, topictitel) {\n    getStrings([\n        {key: 'deletetopic', component: 'cardbox'},\n        {key: 'deletetopicinfo', component: 'cardbox', param: \"'\" + topictitel + \"'\"},\n        {key: 'yes'},\n        {key: 'cancel'}\n    ])\n    .then(strings => {\n        Notification.confirm(strings[0], strings[1], strings[2], strings[3], () => {\n            Ajax.call([{\n                methodname:'mod_cardbox_deletetopic',\n                args: {\n                    'topicid': topicid,\n                },\n                done: () => {\n                    document.getElementById(\"cardbox-topic-\"+topicid).parentElement.parentElement.remove();\n                },\n                fail: Notification.exception\n            }]);\n        });\n    }).catch(Notification.exception);\n}\n/**\n * Function to edit an existing topic from the cardbox instance\n * @param {int} cmid\n * @param {int} topicid\n * @param {string} topictitel\n */\nfunction edittopic(cmid, topicid, topictitel) {\n\n    document.getElementById(\"cardbox-topic-\"+topicid).classList.add('displaynone');\n    document.getElementById(\"cardbox-topic-rename-\"+topicid).classList.remove('displaynone');\n    document.getElementById(\"cardbox-changedtopic-\"+topicid).value = topictitel;\n    document.getElementById(\"cardbox-changedtopic-\"+topicid).focus();\n    document.getElementById(\"cardbox-topic-rename-\"+topicid).addEventListener('keydown', () => {\n        if (window.event.keyCode == 13) {\n            var newtopicname = document.getElementById(\"cardbox-changedtopic-\"+topicid).value;\n            if (newtopicname != topictitel){\n                Ajax.call([{\n                    methodname:'mod_cardbox_renametopic',\n                    args: {\n                        'topicid': topicid,\n                        'newtopicname': newtopicname,\n                    },\n                    done: () => {\n                        document.getElementById(\"topictitel-\"+topicid).innerHTML = newtopicname;\n                        document.getElementById(\"cardbox-topic-\"+topicid).parentElement.setAttribute('data-titel', newtopicname);\n                    },\n                    fail: Notification.exception\n                }]);\n            }\n            document.getElementById(\"cardbox-topic-\"+topicid).classList.remove('displaynone');\n            document.getElementById(\"cardbox-topic-rename-\"+topicid).classList.add('displaynone');\n        }\n        if (window.event.keyCode == 27) {\n            document.getElementById(\"cardbox-topic-\"+topicid).classList.remove('displaynone');\n            document.getElementById(\"cardbox-topic-rename-\"+topicid).classList.add('displaynone');\n        }\n    });\n    document.getElementById(\"cardbox-changedtopic-\"+topicid).addEventListener('blur', () => {\n        document.getElementById(\"cardbox-topic-\"+topicid).classList.remove('displaynone');\n        document.getElementById(\"cardbox-topic-rename-\"+topicid).classList.add('displaynone');\n    });\n\n}\n/**\n * Function to save new topic to the cardbox instance\n * @param {int} cmid\n */\nfunction savenewtopic (cmid) {\n    var newtopic = document.getElementById(\"create-new-topic\").value;\n    if (newtopic != \"\") {\n        var goTo = window.location.pathname + '?id=' + cmid + '&action=savenewtopic&newtopic=' + newtopic;\n        window.location.href = goTo;\n    }\n}"],"names":["cmid","document","querySelectorAll","forEach","btn","topic","closest","topicid","getAttribute","topictitel","addEventListener","key","component","param","then","strings","confirm","call","methodname","args","done","getElementById","parentElement","remove","fail","Notification","exception","catch","deletetopic","edit","classList","add","value","focus","window","event","keyCode","newtopicname","innerHTML","setAttribute","edittopic","newtopic","goTo","location","pathname","href","savenewtopic","registerEventListeners"],"mappings":"+aAsBoB,SAACA,gBAQWA,MAETC,SAASC,iBAAiB,qDAClCC,SAAQ,SAAAC,SACTC,MAAQD,IAAIE,QAAQ,4BACpBC,QAAUF,MAAMG,aAAa,gBAC7BC,WAAaJ,MAAMG,aAAa,cACtCJ,IAAIM,iBAAiB,SAAS,qBA0BjBV,KAAMO,QAASE,iCACrB,CACP,CAACE,IAAK,cAAeC,UAAW,WAChC,CAACD,IAAK,kBAAmBC,UAAW,UAAWC,MAAO,IAAMJ,WAAa,KACzE,CAACE,IAAK,OACN,CAACA,IAAK,YAETG,MAAK,SAAAC,+BACWC,QAAQD,QAAQ,GAAIA,QAAQ,GAAIA,QAAQ,GAAIA,QAAQ,IAAI,yBAC5DE,KAAK,CAAC,CACPC,WAAW,0BACXC,KAAM,SACSZ,SAEfa,KAAM,WACFnB,SAASoB,eAAe,iBAAiBd,SAASe,cAAcA,cAAcC,UAElFC,KAAMC,sBAAaC,mBAG5BC,MAAMF,sBAAaC,WA7CdE,CAAY5B,EAAMO,QAASE,kBAIlBR,SAASC,iBAAiB,mDAClCC,SAAQ,SAAAC,SACPyB,KAAOzB,IAAIE,QAAQ,4BACnBC,QAAUsB,KAAKrB,aAAa,gBAElCJ,IAAIM,iBAAiB,SAAS,eACpBD,WAAaoB,KAAKrB,aAAa,wBA2C9BR,KAAMO,QAASE,YAE9BR,SAASoB,eAAe,iBAAiBd,SAASuB,UAAUC,IAAI,eAChE9B,SAASoB,eAAe,wBAAwBd,SAASuB,UAAUP,OAAO,eAC1EtB,SAASoB,eAAe,wBAAwBd,SAASyB,MAAQvB,WACjER,SAASoB,eAAe,wBAAwBd,SAAS0B,QACzDhC,SAASoB,eAAe,wBAAwBd,SAASG,iBAAiB,WAAW,cACrD,IAAxBwB,OAAOC,MAAMC,QAAe,KACxBC,aAAepC,SAASoB,eAAe,wBAAwBd,SAASyB,MACxEK,cAAgB5B,0BACXQ,KAAK,CAAC,CACPC,WAAW,0BACXC,KAAM,SACSZ,qBACK8B,cAEpBjB,KAAM,WACFnB,SAASoB,eAAe,cAAcd,SAAS+B,UAAYD,aAC3DpC,SAASoB,eAAe,iBAAiBd,SAASe,cAAciB,aAAa,aAAcF,eAE/Fb,KAAMC,sBAAaC,aAG3BzB,SAASoB,eAAe,iBAAiBd,SAASuB,UAAUP,OAAO,eACnEtB,SAASoB,eAAe,wBAAwBd,SAASuB,UAAUC,IAAI,eAE/C,IAAxBG,OAAOC,MAAMC,UACbnC,SAASoB,eAAe,iBAAiBd,SAASuB,UAAUP,OAAO,eACnEtB,SAASoB,eAAe,wBAAwBd,SAASuB,UAAUC,IAAI,mBAG/E9B,SAASoB,eAAe,wBAAwBd,SAASG,iBAAiB,QAAQ,WAC9ET,SAASoB,eAAe,iBAAiBd,SAASuB,UAAUP,OAAO,eACnEtB,SAASoB,eAAe,wBAAwBd,SAASuB,UAAUC,IAAI,kBA3EnES,CAAUxC,EAAMO,QAASE,kBAIjCR,SAASoB,eAAe,4BAA4BX,iBAAiB,SAAS,qBA+E3DV,UACfyC,SAAWxC,SAASoB,eAAe,oBAAoBW,SAC3C,IAAZS,SAAgB,KACZC,KAAOR,OAAOS,SAASC,SAAW,OAAS5C,KAAO,iCAAmCyC,SACzFP,OAAOS,SAASE,KAAOH,MAlFvBI,CAAa9C,SA/Bb+C,CAAuB/C"}