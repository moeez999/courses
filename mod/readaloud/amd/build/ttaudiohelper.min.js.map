{"version":3,"file":"ttaudiohelper.min.js","sources":["../src/ttaudiohelper.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_readaloud/ttwavencoder'], function ($, log, wavencoder) {\n    \"use strict\"; // jshint ;_;\n    /*\n    This file is the engine that drives audio rec and canvas drawing. TT Recorder is the just the glory kid\n     */\n\n    log.debug('TT Audio Helper initialising');\n\n    return {\n        encoder: null,\n        microphone: null,\n        isRecording: false,\n        audioContext: null,\n        processor: null,\n        uniqueid: null,\n\n        config: {\n            bufferLen: 4096,\n            numChannels: 2,\n            mimeType: 'audio/wav'\n        },\n\n        //for making multiple instances\n        clone: function () {\n            return $.extend(true, {}, this);\n        },\n\n\n        init: function(waveHeight, uniqueid, therecorder) {\n\n            this.waveHeight = waveHeight;\n            this.uniqueid=uniqueid;\n            this.therecorder= therecorder;\n            this.prepare_html();\n\n\n            window.AudioContext = window.AudioContext || window.webkitAudioContext;\n\n        },\n\n        onStop: function() {},\n        onStream: function() {},\n        onError: function() {},\n\n\n        prepare_html: function(){\n            this.canvas =$('#' + this.uniqueid + \"_waveform\");\n            this.canvasCtx = this.canvas[0].getContext(\"2d\");\n        },\n\n        start: function(shadow) {\n\n            var that =this;\n\n            // Audio context\n            this.audioContext = new AudioContext();\n            if (this.audioContext.createJavaScriptNode) {\n                this.processor = this.audioContext.createJavaScriptNode(this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n            } else if (this.audioContext.createScriptProcessor) {\n                this.processor = this.audioContext.createScriptProcessor(this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n            } else {\n                log.debug('WebAudio API has no support on this browser.');\n            }\n            this.processor.connect(this.audioContext.destination);\n\n\n            var gotStreamMethod= function(stream) {\n                that.onStream(stream);\n                that.isRecording = true;\n                that.therecorder.update_audio('isRecording',true);\n                that.tracks = stream.getTracks();\n\n                //lets check the noise suppression and echo reduction on thise\n                for(var i=0; i<that.tracks.length; i++){\n                    var track = that.tracks[i];\n                    if(track.kind == \"audio\"){\n                        var settings = track.getSettings();\n                        if(settings.noiseSuppression){\n                            log.debug(\"Noise Suppression is on\");\n                        }else{\n                            log.debug(\"Noise Suppression is off\");\n                        }\n                        if(settings.echoCancellation){\n                            log.debug(\"Echo Cancellation is on\");\n                        }else{\n                            log.debug(\"Echo Cancellation is off\");\n                        }\n                    }\n                }\n\n                // Create a MediaStreamAudioSourceNode for the microphone\n\n                that.microphone = that.audioContext.createMediaStreamSource(stream);\n\n                // Connect the AudioBufferSourceNode to the gainNode\n\n                that.microphone.connect(that.processor);\n                that.encoder = wavencoder.clone();\n                that.encoder.init(that.audioContext.sampleRate, 2);\n\n                // Give the node a function to process audio events\n                that.processor.onaudioprocess = function(event) {\n                    that.encoder.encode(that.getBuffers(event));\n                };\n\n                that.listener = that.audioContext.createAnalyser();\n                that.microphone.connect(that.listener);\n                that.listener.fftSize = 2048; // 256\n\n                that.bufferLength = that.listener.frequencyBinCount;\n                that.analyserData = new Uint8Array(that.bufferLength);\n\n                that.canvasCtx.clearRect(0, 0, that.canvas.width()*2, that.waveHeight*2);\n\n                that.interval = setInterval(function() {\n                    that.drawWave();\n                }, 100);\n\n            };\n\n\n\n            // Mic permission\n            var audioconstraints = true;\n            log.debug(\"Shadow is \" + shadow);\n            if(shadow===true){\n                audioconstraints =  {\n                    echoCancellation: false,\n                    noiseSuppression: false\n                }\n            }\n            navigator.mediaDevices.getUserMedia({\n                audio:  audioconstraints,\n                video: false,\n\n            }).then(gotStreamMethod).catch(this.onError);\n        },\n\n        stop: function() {\n            clearInterval(this.interval);\n            this.canvasCtx.clearRect(0, 0, this.canvas.width()*2, this.waveHeight * 2);\n            this.isRecording = false;\n            this.therecorder.update_audio('isRecording',false);\n            this.audioContext.close();\n            this.processor.disconnect();\n            this.tracks.forEach(function(track){track.stop();});\n            this.onStop(this.encoder.finish());\n        },\n\n        getBuffers: function(event) {\n            var buffers = [];\n            for (var ch = 0; ch < 2; ++ch) {\n                buffers[ch] = event.inputBuffer.getChannelData(ch);\n            }\n            return buffers;\n        },\n\n\n\n        drawWave: function() {\n\n            var width = this.canvas.width() * 2;\n            this.listener.getByteTimeDomainData(this.analyserData);\n\n            this.canvasCtx.fillStyle = 'white';\n            this.canvasCtx.fillRect(0, 0, width, this.waveHeight*2);\n\n            this.canvasCtx.lineWidth = 5;\n            this.canvasCtx.strokeStyle = 'gray';\n            this.canvasCtx.beginPath();\n\n            var slicewaveWidth = width / this.bufferLength;\n            var x = 0;\n\n            for (var i = 0; i < this.bufferLength; i++) {\n\n                var v = this.analyserData[i] / 128.0;\n                var y = v * this.waveHeight;\n\n                if (i === 0) {\n                    // this.canvasCtx.moveTo(x, y);\n                } else {\n                    this.canvasCtx.lineTo(x, y);\n                }\n\n                x += slicewaveWidth;\n            }\n\n            this.canvasCtx.lineTo(width, this.waveHeight);\n            this.canvasCtx.stroke();\n\n        }\n    }; //end of this declaration\n\n\n});"],"names":["define","$","log","wavencoder","debug","encoder","microphone","isRecording","audioContext","processor","uniqueid","config","bufferLen","numChannels","mimeType","clone","extend","this","init","waveHeight","therecorder","prepare_html","window","AudioContext","webkitAudioContext","onStop","onStream","onError","canvas","canvasCtx","getContext","start","shadow","that","createJavaScriptNode","createScriptProcessor","connect","destination","audioconstraints","echoCancellation","noiseSuppression","navigator","mediaDevices","getUserMedia","audio","video","then","stream","update_audio","tracks","getTracks","i","length","track","kind","settings","getSettings","createMediaStreamSource","sampleRate","onaudioprocess","event","encode","getBuffers","listener","createAnalyser","fftSize","bufferLength","frequencyBinCount","analyserData","Uint8Array","clearRect","width","interval","setInterval","drawWave","catch","stop","clearInterval","close","disconnect","forEach","finish","buffers","ch","inputBuffer","getChannelData","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","slicewaveWidth","x","y","lineTo","stroke"],"mappings":"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"}