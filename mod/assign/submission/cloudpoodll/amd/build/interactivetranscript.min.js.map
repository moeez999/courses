{"version":3,"file":"interactivetranscript.min.js","sources":["../src/interactivetranscript.js"],"sourcesContent":["define(['jquery','core/log'], function($,log) {\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Interactive Transcript: initialising');\n\n    return {\n\n        init: function(opts){\n\n            var component= opts['component'];\n            var playerid= opts['playerid'];\n            var containerid= opts['containerid'];\n            var cssprefix= opts['cssprefix'];\n            var lang = opts['cssprefix'];\n            var config={};\n            config.settings ={};\n            if(playerid && $('#' + playerid).length) {\n                config.component = component;\n                config.prefix = cssprefix;\n                config.player = $('#' + playerid)[0];\n                config.title = M.util.get_string('transcripttitle',component);\n                var transcript = this.transcript(config);\n                $('#' + containerid).append(transcript.el());\n            }\n        },\n\n\n// Defaults\n        defaults: {\n            autoscroll: true,\n            clickArea: 'line', //the clickable part of line text,line,timestamp, none\n            showTitle: true, //the title\n            showTrackSelector: false, //the drop down box of caption tracks\n            followPlayerTrack: true,\n            scrollToCenter: false, //show current text in center\n            stopScrollWhenInUse: true, //stop scrolling when user interacting\n        },\n\n        /*global */\n        utils: {\n            prefix: 'transcript',\n            secondsToTime: function (timeInSeconds) {\n                var hour = Math.floor(timeInSeconds / 3600);\n                var min = Math.floor(timeInSeconds % 3600 / 60);\n                var sec = Math.floor(timeInSeconds % 60);\n                sec = (sec < 10) ? '0' + sec : sec;\n                min = (hour > 0 && min < 10) ? '0' + min : min;\n                if (hour > 0) {\n                    return hour + ':' + min + ':' + sec;\n                }\n                return min + ':' + sec;\n            },\n            localize: function (string) {\n                return string; // TODO: do something here;\n            },\n            createEl: function (elementName, className) {\n                className = className || '';\n                var el = document.createElement(elementName);\n                el.className = className;\n                return el;\n            },\n            extend: function(obj) {\n                var type = typeof obj;\n                if (!(type === 'function' || type === 'object' && !!obj)) {\n                    return obj;\n                }\n                var source, prop;\n                for (var i = 1, length = arguments.length; i < length; i++) {\n                    source = arguments[i];\n                    for (prop in source) {\n                        obj[prop] = source[prop];\n                    }\n                }\n                return obj;\n            }\n        },\n\n        eventEmitter: {\n            handlers_: [],\n            on: function on (object, eventtype, callback) {\n                if (typeof callback === 'function') {\n                    this.handlers_.push([object, eventtype, callback]);\n                } else {\n                    throw new TypeError('Callback is not a function.');\n                }\n            },\n            trigger: function trigger (object, eventtype) {\n                this.handlers_.forEach( function(h) {\n                    if (h[0] === object &&\n                        h[1] === eventtype) {\n                        h[2].apply();\n                    }\n                });\n            }\n        },\n\n        scrollerProto: function(config) {\n\n            var initHandlers = function (el) {\n                var self = this;\n                // The scroll event. We want to keep track of when the user is scrolling the transcript.\n                el.addEventListener('scroll', function () {\n                    if (self.isAutoScrolling) {\n\n                        // If isAutoScrolling was set to true, we can set it to false and then ignore this event.\n                        // It wasn't the user.\n                        self.isAutoScrolling = false; // event handled\n                    } else {\n\n                        // We only care about when the user scrolls. Set userIsScrolling to true and add a nice class.\n                        self.userIsScrolling = true;\n                        el.classList.add('is-inuse');\n                    }\n                });\n\n                // The mouseover event.\n                el.addEventListener('mouseenter', function () {\n                    self.mouseIsOverTranscript = true;\n                });\n                el.addEventListener('mouseleave', function () {\n                    self.mouseIsOverTranscript = false;\n\n                    // Have a small delay before deciding user as done interacting.\n                    setTimeout(function () {\n\n                        // Make sure the user didn't move the pointer back in.\n                        if (!self.mouseIsOverTranscript) {\n                            self.userIsScrolling = false;\n                            el.classList.remove('is-inuse');\n                        }\n                    }, 1000);\n                });\n            };\n\n            // Init instance variables\n            var init = function (element) {\n                this.element = element;\n                this.userIsScrolling = false;\n\n                //default to true in case user isn't using a mouse;\n                this.mouseIsOverTranscript = true;\n                this.isAutoScrolling = true;\n                initHandlers.call(this, this.element);\n                return this;\n            };\n\n            // Easing function for smoothness.\n            var easeOut = function (time, start, change, duration) {\n                return start + change * Math.sin(Math.min(1, time / duration) * (Math.PI / 2));\n            };\n\n            // Animate the scrolling.\n            var scrollTo = function (element, newPos, duration) {\n                var startTime = Date.now();\n                var startPos = element.scrollTop;\n                var self = this;\n\n                // Don't try to scroll beyond the limits. You won't get there and this will loop forever.\n                newPos = Math.max(0, newPos);\n                newPos = Math.min(element.scrollHeight - element.clientHeight, newPos);\n                var change = newPos - startPos;\n\n                // This inner function is called until the elements scrollTop reaches newPos.\n                var updateScroll = function () {\n                    var now = Date.now();\n                    var time = now - startTime;\n                    self.isAutoScrolling = true;\n                    element.scrollTop = easeOut(time, startPos, change, duration);\n                    if (element.scrollTop !== newPos) {\n                        requestAnimationFrame(updateScroll, element);\n                    }\n                };\n                requestAnimationFrame(updateScroll, element);\n            };\n\n            // Scroll an element's parent so the element is brought into view.\n            var scrollToElement = function (element) {\n                if (this.canScroll()) {\n                    var parent = element.parentElement;\n                    var parentOffsetBottom = parent.offsetTop + parent.clientHeight;\n                    var elementOffsetBottom = element.offsetTop + element.clientHeight;\n                    var relTop = element.offsetTop;\n                    var relBottom = (element.offsetTop + element.clientHeight);\n                    var centerPosCorrection = 0;\n                    var newPos;\n                    /*\n                                        console.log('element.offsetTop: ' + element.offsetTop );\n                                        console.log('element.clientHeight: ' + element.clientHeight );\n                                        console.log('parent.offsetTop: ' + parent.offsetTop );\n                                        console.log('parent.scrollTop: ' + parent.scrollTop );\n                                        console.log('parent.clientHeight: ' + parent.clientHeight );\n                                        console.log(element);\n                                        console.log(parent);\n                    */\n                    //scroll to center if we must\n                    if (config.settings.scrollToCenter){\n                        centerPosCorrection = Math.round(parent.clientHeight/2 - element.clientHeight/2);\n                    }\n                    // If the top of the line is above the top of the parent view, were scrolling up,\n                    // so we want to move the top of the element downwards to match the top of the parent.\n                    if (relTop < parent.scrollTop + centerPosCorrection) {\n                        newPos = element.offsetTop  -centerPosCorrection;\n\n                        // If the bottom of the line is below the parent view, we're scrolling down, so we want the\n                        // bottom edge of the line to move up to meet the bottom edge of the parent.\n                    } else if (relBottom > (parent.scrollTop + parent.clientHeight) - centerPosCorrection) {\n                        newPos = elementOffsetBottom + centerPosCorrection;\n                    }\n\n                    // Don't try to scroll if we haven't set a new position.  If we didn't\n                    // set a new position the line is already in view (i.e. It's not above\n                    // or below the view)\n                    // And don't try to scroll when the element is already in position.\n                    if (newPos !== undefined && parent.scrollTop !== newPos) {\n                        scrollTo.call(this, parent, newPos, 400);\n                    }\n                }\n            };\n\n\n            // Return whether the element is scrollable.\n            var canScroll = function () {\n                var el = this.element;\n                //console.log(el.scrollHeight + ' ' + el.offsetHeight);\n                return el.scrollHeight > el.offsetHeight;\n            };\n\n            // Return whether the user is interacting with the transcript.\n            var inUse = function () {\n                return this.userIsScrolling;\n            };\n\n            return {\n                init: init,\n                to : scrollToElement,\n                canScroll : canScroll,\n                inUse : inUse\n            }\n        },\n\n        scroller:  function(element,config) {\n            return Object.create(this.scrollerProto(config)).init(element);\n        },\n\n\n        /*global config*/\n        trackList: function(config) {\n            var activeTrack;\n            return {\n                get: function () {\n                    var validTracks = [];\n                    var i, track;\n                    config.tracks = config.player.textTracks;\n                    for (i = 0; i < config.tracks.length; i++) {\n                        track = config.tracks[i];\n                        if (track.kind === 'captions' || track.kind === 'subtitles') {\n                            validTracks.push(track);\n                        }\n                    }\n                    return validTracks;\n                },\n                active: function (tracks) {\n                    var i, track;\n                    for (i = 0; i < config.tracks.length; i++) {\n                        track = config.tracks[i];\n                        if (track.mode === 'showing') {\n                            activeTrack = track;\n                            return track;\n                        }\n                    }\n                    // fallback to first track\n                    return activeTrack || tracks[0];\n                },\n            };\n        },\n\n        /*globals utils, eventEmitter,scrollable*/\n\n        widget:  function(config) {\n            var that = this;\n            var thewidget = {};\n            thewidget.element = {};\n            thewidget.body = {};\n            var on = function (event, callback) {\n                eventEmitter.on(that, event, callback);\n            };\n            var trigger = function (event) {\n                eventEmitter.trigger(that, event);\n            };\n            var createTitle = function () {\n                var header = that.utils.createEl('header', config.prefix + '-header');\n                header.textContent = config.title;\n                return header;\n            };\n            var createSelector = function (){\n                var selector = that.utils.createEl('select', config.prefix + '-selector');\n                config.validTracks.forEach(function (track, i) {\n                    var option = document.createElement('option');\n                    option.value = i;\n                    option.textContent = track.label + ' (' + track.language + ')';\n                    selector.appendChild(option);\n                });\n                selector.addEventListener('change', function (e) {\n                    setTrack(document.querySelector('#' + config.prefix + '-' + config.player.id + ' option:checked').value);\n                    trigger('trackchanged');\n                });\n                return selector;\n            };\n            var clickToSeekHandler = function (event) {\n                var clickedClasses = event.target.classList;\n                var clickedTime = event.target.getAttribute('data-begin') || event.target.parentElement.getAttribute('data-begin');\n                if (clickedTime !== undefined && clickedTime !== null) { // can be zero\n                    if ((config.settings.clickArea === 'line') || // clickArea: 'line' activates on all elements\n                        (config.settings.clickArea === 'timestamp' && clickedClasses.contains(config.prefix + '-timestamp')) ||\n                        (config.settings.clickArea === 'text' && clickedClasses.contains(config.prefix + '-text'))) {\n                        config.player.currentTime =clickedTime ;\n                    }\n                }\n            };\n            var createLine = function (cue) {\n                var line = that.utils.createEl('div', config.prefix +'-line');\n                var timestamp = that.utils.createEl('span',config.prefix + '-timestamp');\n                var text = that.utils.createEl('span', config.prefix + '-text');\n                line.setAttribute('data-begin', cue.startTime);\n                line.setAttribute('tabindex', thewidget._options.tabIndex || 0);\n                timestamp.textContent = that.utils.secondsToTime(cue.startTime);\n                text.innerHTML = cue.text;\n                line.appendChild(timestamp);\n                line.appendChild(text);\n                return line;\n            };\n            var createTranscriptBody = function (track) {\n                if (typeof track !== 'object') {\n                    track = config.player.textTracks()[track];\n                }\n                var body = that.utils.createEl('div', config.prefix + '-body');\n                var line, i;\n                var fragment = document.createDocumentFragment();\n                // activeCues returns null when the track isn't loaded (for now?)\n                if (!track.activeCues) {\n                    // If cues aren't loaded, set mode to hidden, wait, and try again.\n                    // But don't hide an active track. In that case, just wait and try again.\n                    if (track.mode !== 'showing') {\n                        track.mode = 'hidden';\n                    }\n                    window.setTimeout(function() {\n                        createTranscriptBody(track);\n                    }, 100);\n                } else {\n                    var cues = track.cues;\n                    for (i = 0; i < cues.length; i++) {\n                        line = createLine(cues[i]);\n                        fragment.appendChild(line);\n                    }\n                    body.innerHTML = '';\n                    body.appendChild(fragment);\n                    body.setAttribute('lang', track.language);\n                    body.scroll = that.scroller(body,config);\n                    body.addEventListener('click', clickToSeekHandler);\n                    thewidget.element.replaceChild(body, thewidget.body);\n                    thewidget.body = body;\n                }\n\n            };\n            var create = function (options) {\n                var el = document.createElement('div');\n                thewidget._options = options;\n                thewidget.element = el;\n                el.setAttribute('id', config.prefix + '-' + config.player.id);\n                if (config.settings.showTitle) {\n                    var title = createTitle();\n                    el.appendChild(title);\n                }\n                if (config.settings.showTrackSelector) {\n                    var selector = createSelector();\n                    el.appendChild(selector);\n                }\n                thewidget.body = that.utils.createEl('div',config.prefix + '-body');\n                el.appendChild(thewidget.body);\n                setTrack(config.currentTrack);\n                return this;\n            };\n            var setTrack = function (track, trackCreated) {\n                createTranscriptBody(track, trackCreated);\n            };\n            var setCue = function (time) {\n                var active, i, line, begin, end;\n                var lines = thewidget.body.children;\n                for (i = 0; i < lines.length; i++) {\n                    line = lines[i];\n                    begin = line.getAttribute('data-begin');\n                    if (i < lines.length - 1) {\n                        end = lines[i + 1].getAttribute('data-begin');\n                    } else {\n                        end = config.player.duration || Infinity;\n                    }\n                    if (time > begin && time < end) {\n                        if (!line.classList.contains('is-active')) { // don't update if it hasn't changed\n                            line.classList.add('is-active');\n                            if (config.settings.autoscroll && !(config.settings.stopScrollWhenInUse && thewidget.body.scroll.inUse())) {\n                                thewidget.body.scroll.to(line);\n                            }\n                        }\n                    } else {\n                        line.classList.remove('is-active');\n                    }\n                }\n            };\n            var el = function () {\n                return thewidget.element;\n            };\n            return {\n                create: create,\n                setTrack: setTrack,\n                setCue: setCue,\n                el : el,\n                on: on,\n                trigger: trigger,\n            };\n        },\n\n        transcript: function(config){\n            var that=this;\n            var options=this.defaults;\n            this.utils.prefix='transcript';\n\n            config.validTracks = this.trackList(config).get();\n            config.currentTrack = this.trackList(config).active(config.validTracks);\n            config.settings = options;\n            config.widget = this.widget(config).create(options);\n\n            var timeUpdate = function () {\n                config.widget.setCue(config.player.currentTime);\n            };\n            var updateTrack = function () {\n                config.currentTrack = that.trackList(config).active(config.validTracks);\n                config.widget.setTrack(config.currentTrack);\n            };\n            if (config.validTracks.length > 0) {\n                updateTrack();\n                config.player.ontimeupdate = timeUpdate;\n                if (config.settings.followPlayerTrack) {\n                    config.player.oncaptionstrackchange = updateTrack;\n                    config.player.onsubtitlestrackchange = updateTrack;\n                }\n            } else {\n                throw new Error('transcript: No tracks found!');\n            }\n            return {\n                el: function () {\n                    return config.widget.el();\n                },\n                setTrack: config.widget.setTrack\n            };\n        }\n\n    };//end of return object\n});"],"names":["define","$","log","debug","init","opts","component","playerid","containerid","cssprefix","config","length","prefix","player","title","M","util","get_string","transcript","this","append","el","defaults","autoscroll","clickArea","showTitle","showTrackSelector","followPlayerTrack","scrollToCenter","stopScrollWhenInUse","utils","secondsToTime","timeInSeconds","hour","Math","floor","min","sec","localize","string","createEl","elementName","className","document","createElement","extend","obj","source","prop","type","i","arguments","eventEmitter","handlers_","on","object","eventtype","callback","TypeError","push","trigger","forEach","h","apply","scrollerProto","initHandlers","self","addEventListener","isAutoScrolling","userIsScrolling","classList","add","mouseIsOverTranscript","setTimeout","remove","scrollTo","element","newPos","duration","startTime","Date","now","startPos","scrollTop","max","change","scrollHeight","clientHeight","updateScroll","time","start","sin","PI","easeOut","requestAnimationFrame","call","to","canScroll","parent","parentElement","elementOffsetBottom","offsetTop","relTop","relBottom","centerPosCorrection","settings","round","undefined","offsetHeight","inUse","scroller","Object","create","trackList","activeTrack","get","track","validTracks","tracks","textTracks","kind","active","mode","widget","that","thewidget","event","clickToSeekHandler","clickedClasses","target","clickedTime","getAttribute","contains","currentTime","createLine","cue","line","timestamp","text","setAttribute","_options","tabIndex","textContent","innerHTML","appendChild","createTranscriptBody","body","fragment","createDocumentFragment","activeCues","cues","language","scroll","replaceChild","window","setTrack","trackCreated","options","header","id","selector","option","value","label","e","querySelector","createSelector","currentTrack","setCue","begin","end","lines","children","Infinity","updateTrack","Error","ontimeupdate","oncaptionstrackchange","onsubtitlestrackchange"],"mappings":"AAAAA,4DAAO,CAAC,SAAS,aAAa,SAASC,EAAEC,YAGrCA,IAAIC,MAAM,wCAEH,CAEHC,KAAM,SAASC,UAEPC,UAAWD,KAAI,UACfE,SAAUF,KAAI,SACdG,YAAaH,KAAI,YACjBI,UAAWJ,KAAI,UAEfK,QADOL,KAAI,UACJ,CACXK,SAAiB,QACdH,UAAYN,EAAE,IAAMM,UAAUI,OAAQ,CACrCD,OAAOJ,UAAYA,UACnBI,OAAOE,OAASH,UAChBC,OAAOG,OAASZ,EAAE,IAAMM,UAAU,GAClCG,OAAOI,MAAQC,EAAEC,KAAKC,WAAW,kBAAkBX,eAC/CY,WAAaC,KAAKD,WAAWR,QACjCT,EAAE,IAAMO,aAAaY,OAAOF,WAAWG,QAM/CC,SAAU,CACNC,YAAY,EACZC,UAAW,OACXC,WAAW,EACXC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,EAChBC,qBAAqB,GAIzBC,MAAO,CACHlB,OAAQ,aACRmB,cAAe,SAAUC,mBACjBC,KAAOC,KAAKC,MAAMH,cAAgB,MAClCI,IAAMF,KAAKC,MAAMH,cAAgB,KAAO,IACxCK,IAAMH,KAAKC,MAAMH,cAAgB,WACrCK,IAAOA,IAAM,GAAM,IAAMA,IAAMA,IAC/BD,IAAOH,KAAO,GAAKG,IAAM,GAAM,IAAMA,IAAMA,IACvCH,KAAO,EACAA,KAAO,IAAMG,IAAM,IAAMC,IAE7BD,IAAM,IAAMC,KAEvBC,SAAU,SAAUC,eACTA,QAEXC,SAAU,SAAUC,YAAaC,WAC7BA,UAAYA,WAAa,OACrBrB,GAAKsB,SAASC,cAAcH,oBAChCpB,GAAGqB,UAAYA,UACRrB,IAEXwB,OAAQ,SAASC,SAKTC,OAAQC,KAJRC,YAAcH,SACH,aAATG,MAAgC,WAATA,MAAuBH,YACzCA,QAGN,IAAII,EAAI,EAAGvC,OAASwC,UAAUxC,OAAQuC,EAAIvC,OAAQuC,QAE9CF,QADLD,OAASI,UAAUD,GAEfJ,IAAIE,MAAQD,OAAOC,aAGpBF,MAIfM,aAAc,CACVC,UAAW,GACXC,GAAI,SAAaC,OAAQC,UAAWC,aACR,mBAAbA,eAGD,IAAIC,UAAU,oCAFfL,UAAUM,KAAK,CAACJ,OAAQC,UAAWC,YAKhDG,QAAS,SAAkBL,OAAQC,gBAC1BH,UAAUQ,SAAS,SAASC,GACzBA,EAAE,KAAOP,QACTO,EAAE,KAAON,WACTM,EAAE,GAAGC,aAMrBC,cAAe,SAAStD,YAEhBuD,aAAe,SAAU5C,QACrB6C,KAAO/C,KAEXE,GAAG8C,iBAAiB,UAAU,WACtBD,KAAKE,gBAILF,KAAKE,iBAAkB,GAIvBF,KAAKG,iBAAkB,EACvBhD,GAAGiD,UAAUC,IAAI,gBAKzBlD,GAAG8C,iBAAiB,cAAc,WAC9BD,KAAKM,uBAAwB,KAEjCnD,GAAG8C,iBAAiB,cAAc,WAC9BD,KAAKM,uBAAwB,EAG7BC,YAAW,WAGFP,KAAKM,wBACNN,KAAKG,iBAAkB,EACvBhD,GAAGiD,UAAUI,OAAO,eAEzB,SAsBPC,SAAW,SAAUC,QAASC,OAAQC,cAClCC,UAAYC,KAAKC,MACjBC,SAAWN,QAAQO,UACnBjB,KAAO/C,KAGX0D,OAAS3C,KAAKkD,IAAI,EAAGP,YAEjBQ,QADJR,OAAS3C,KAAKE,IAAIwC,QAAQU,aAAeV,QAAQW,aAAcV,SACzCK,SAGlBM,aAAe,eAEXC,KADMT,KAAKC,MACEF,UACjBb,KAAKE,iBAAkB,EACvBQ,QAAQO,UApBF,SAAUM,KAAMC,MAAOL,OAAQP,iBAClCY,MAAQL,OAASnD,KAAKyD,IAAIzD,KAAKE,IAAI,EAAGqD,KAAOX,WAAa5C,KAAK0D,GAAK,IAmBnDC,CAAQJ,KAAMP,SAAUG,OAAQP,UAChDF,QAAQO,YAAcN,QACtBiB,sBAAsBN,aAAcZ,UAG5CkB,sBAAsBN,aAAcZ,gBA4DjC,CACHxE,KAlGO,SAAUwE,qBACZA,QAAUA,aACVP,iBAAkB,OAGlBG,uBAAwB,OACxBJ,iBAAkB,EACvBH,aAAa8B,KAAK5E,KAAMA,KAAKyD,SACtBzD,MA2FP6E,GA1DkB,SAAUpB,YACxBzD,KAAK8E,YAAa,KAOdpB,OANAqB,OAAStB,QAAQuB,cAEjBC,qBADqBF,OAAOG,UAAYH,OAAOX,aACzBX,QAAQyB,UAAYzB,QAAQW,cAClDe,OAAS1B,QAAQyB,UACjBE,UAAa3B,QAAQyB,UAAYzB,QAAQW,aACzCiB,oBAAsB,EAYtB9F,OAAO+F,SAAS7E,iBAChB4E,oBAAsBtE,KAAKwE,MAAMR,OAAOX,aAAa,EAAIX,QAAQW,aAAa,IAI9Ee,OAASJ,OAAOf,UAAYqB,oBAC5B3B,OAASD,QAAQyB,UAAYG,oBAItBD,UAAaL,OAAOf,UAAYe,OAAOX,aAAgBiB,sBAC9D3B,OAASuB,oBAAsBI,0BAOpBG,IAAX9B,QAAwBqB,OAAOf,YAAcN,QAC7CF,SAASoB,KAAK5E,KAAM+E,OAAQrB,OAAQ,OAqB5CoB,UAdY,eACR5E,GAAKF,KAAKyD,eAEPvD,GAAGiE,aAAejE,GAAGuF,cAY5BC,MARQ,kBACD1F,KAAKkD,mBAWpByC,SAAW,SAASlC,QAAQlE,eACjBqG,OAAOC,OAAO7F,KAAK6C,cAActD,SAASN,KAAKwE,UAK1DqC,UAAW,SAASvG,YACZwG,kBACG,CACHC,IAAK,eAEGjE,EAAGkE,MADHC,YAAc,OAElB3G,OAAO4G,OAAS5G,OAAOG,OAAO0G,WACzBrE,EAAI,EAAGA,EAAIxC,OAAO4G,OAAO3G,OAAQuC,IAEf,cADnBkE,MAAQ1G,OAAO4G,OAAOpE,IACZsE,MAAsC,cAAfJ,MAAMI,MACnCH,YAAY1D,KAAKyD,cAGlBC,aAEXI,OAAQ,SAAUH,YACVpE,EAAGkE,UACFlE,EAAI,EAAGA,EAAIxC,OAAO4G,OAAO3G,OAAQuC,OAEf,aADnBkE,MAAQ1G,OAAO4G,OAAOpE,IACZwE,YACNR,YAAcE,MACPA,aAIRF,aAAeI,OAAO,MAOzCK,OAAS,SAASjH,YACVkH,KAAOzG,KACP0G,UAAY,CAChBA,QAAoB,GACpBA,KAAiB,IAIbjE,QAAU,SAAUkE,OACpB1E,aAAaQ,QAAQgE,KAAME,QAqB3BC,mBAAqB,SAAUD,WAC3BE,eAAiBF,MAAMG,OAAO3D,UAC9B4D,YAAcJ,MAAMG,OAAOE,aAAa,eAAiBL,MAAMG,OAAO9B,cAAcgC,aAAa,cACjGD,MAAAA,cACmC,SAA9BxH,OAAO+F,SAASjF,WACc,cAA9Bd,OAAO+F,SAASjF,WAA6BwG,eAAeI,SAAS1H,OAAOE,OAAS,eACvD,SAA9BF,OAAO+F,SAASjF,WAAwBwG,eAAeI,SAAS1H,OAAOE,OAAS,YACjFF,OAAOG,OAAOwH,YAAaH,cAInCI,WAAa,SAAUC,SACnBC,KAAOZ,KAAK9F,MAAMU,SAAS,MAAO9B,OAAOE,OAAQ,SACjD6H,UAAYb,KAAK9F,MAAMU,SAAS,OAAO9B,OAAOE,OAAS,cACvD8H,KAAOd,KAAK9F,MAAMU,SAAS,OAAQ9B,OAAOE,OAAS,gBACvD4H,KAAKG,aAAa,aAAcJ,IAAIxD,WACpCyD,KAAKG,aAAa,WAAYd,UAAUe,SAASC,UAAY,GAC7DJ,UAAUK,YAAclB,KAAK9F,MAAMC,cAAcwG,IAAIxD,WACrD2D,KAAKK,UAAYR,IAAIG,KACrBF,KAAKQ,YAAYP,WACjBD,KAAKQ,YAAYN,MACVF,MAEPS,qBAAuB,SAAU7B,OACZ,iBAAVA,QACPA,MAAQ1G,OAAOG,OAAO0G,aAAaH,YAGnCoB,KAAMtF,EADNgG,KAAOtB,KAAK9F,MAAMU,SAAS,MAAO9B,OAAOE,OAAS,SAElDuI,SAAWxG,SAASyG,4BAEnBhC,MAAMiC,WASJ,KACCC,KAAOlC,MAAMkC,SACZpG,EAAI,EAAGA,EAAIoG,KAAK3I,OAAQuC,IACzBsF,KAAOF,WAAWgB,KAAKpG,IACvBiG,SAASH,YAAYR,MAEzBU,KAAKH,UAAY,GACjBG,KAAKF,YAAYG,UACjBD,KAAKP,aAAa,OAAQvB,MAAMmC,UAChCL,KAAKM,OAAS5B,KAAKd,SAASoC,KAAKxI,QACjCwI,KAAK/E,iBAAiB,QAAS4D,oBAC/BF,UAAUjD,QAAQ6E,aAAaP,KAAMrB,UAAUqB,MAC/CrB,UAAUqB,KAAOA,SAlBE,YAAf9B,MAAMM,OACNN,MAAMM,KAAO,UAEjBgC,OAAOjF,YAAW,WACdwE,qBAAqB7B,SACtB,MAmCPuC,SAAW,SAAUvC,MAAOwC,cAC5BX,qBAAqB7B,MAAOwC,qBA4BzB,CACH5C,OAhDS,SAAU6C,aA1EfC,OA2EAzI,GAAKsB,SAASC,cAAc,UAChCiF,UAAUe,SAAWiB,QACrBhC,UAAUjD,QAAUvD,GACpBA,GAAGsH,aAAa,KAAMjI,OAAOE,OAAS,IAAMF,OAAOG,OAAOkJ,IACtDrJ,OAAO+F,SAAShF,UAAW,KACvBX,QAhFJgJ,OAASlC,KAAK9F,MAAMU,SAAS,SAAU9B,OAAOE,OAAS,YACpDkI,YAAcpI,OAAOI,MACrBgJ,QA+EHzI,GAAG2H,YAAYlI,UAEfJ,OAAO+F,SAAS/E,kBAAmB,KAC/BsI,SAhFS,eACbA,SAAWpC,KAAK9F,MAAMU,SAAS,SAAU9B,OAAOE,OAAS,oBAC7DF,OAAO2G,YAAYxD,SAAQ,SAAUuD,MAAOlE,OACpC+G,OAAStH,SAASC,cAAc,UACpCqH,OAAOC,MAAQhH,EACf+G,OAAOnB,YAAc1B,MAAM+C,MAAQ,KAAO/C,MAAMmC,SAAW,IAC3DS,SAAShB,YAAYiB,WAEzBD,SAAS7F,iBAAiB,UAAU,SAAUiG,GAC1CT,SAAShH,SAAS0H,cAAc,IAAM3J,OAAOE,OAAS,IAAMF,OAAOG,OAAOkJ,GAAK,mBAAmBG,OAClGtG,QAAQ,mBAELoG,SAoEYM,GACfjJ,GAAG2H,YAAYgB,iBAEnBnC,UAAUqB,KAAOtB,KAAK9F,MAAMU,SAAS,MAAM9B,OAAOE,OAAS,SAC3DS,GAAG2H,YAAYnB,UAAUqB,MACzBS,SAASjJ,OAAO6J,cACTpJ,MAiCPwI,SAAUA,SACVa,OA7BS,SAAU/E,UACPvC,EAAGsF,KAAMiC,MAAOC,IACxBC,MAAQ9C,UAAUqB,KAAK0B,aACtB1H,EAAI,EAAGA,EAAIyH,MAAMhK,OAAQuC,IAE1BuH,OADAjC,KAAOmC,MAAMzH,IACAiF,aAAa,cAEtBuC,IADAxH,EAAIyH,MAAMhK,OAAS,EACbgK,MAAMzH,EAAI,GAAGiF,aAAa,cAE1BzH,OAAOG,OAAOiE,UAAY+F,EAAAA,EAEhCpF,KAAOgF,OAAShF,KAAOiF,IAClBlC,KAAKlE,UAAU8D,SAAS,eACzBI,KAAKlE,UAAUC,IAAI,cACf7D,OAAO+F,SAASlF,YAAgBb,OAAO+F,SAAS5E,qBAAuBgG,UAAUqB,KAAKM,OAAO3C,SAC7FgB,UAAUqB,KAAKM,OAAOxD,GAAGwC,OAIjCA,KAAKlE,UAAUI,OAAO,cAW9BrD,GAPK,kBACEwG,UAAUjD,SAOjBtB,GArIK,SAAUwE,MAAOrE,UACtBL,aAAaE,GAAGsE,KAAME,MAAOrE,WAqI7BG,QAASA,UAIjB1C,WAAY,SAASR,YACbkH,KAAKzG,KACL0I,QAAQ1I,KAAKG,cACZQ,MAAMlB,OAAO,aAElBF,OAAO2G,YAAclG,KAAK8F,UAAUvG,QAAQyG,MAC5CzG,OAAO6J,aAAepJ,KAAK8F,UAAUvG,QAAQ+G,OAAO/G,OAAO2G,aAC3D3G,OAAO+F,SAAWoD,QAClBnJ,OAAOiH,OAASxG,KAAKwG,OAAOjH,QAAQsG,OAAO6C,aAKvCiB,YAAc,WACdpK,OAAO6J,aAAe3C,KAAKX,UAAUvG,QAAQ+G,OAAO/G,OAAO2G,aAC3D3G,OAAOiH,OAAOgC,SAASjJ,OAAO6J,oBAE9B7J,OAAO2G,YAAY1G,OAAS,SAQtB,IAAIoK,MAAM,uCAPhBD,cACApK,OAAOG,OAAOmK,aATD,WACbtK,OAAOiH,OAAO6C,OAAO9J,OAAOG,OAAOwH,cAS/B3H,OAAO+F,SAAS9E,oBAChBjB,OAAOG,OAAOoK,sBAAwBH,YACtCpK,OAAOG,OAAOqK,uBAAyBJ,aAKxC,CACHzJ,GAAI,kBACOX,OAAOiH,OAAOtG,MAEzBsI,SAAUjJ,OAAOiH,OAAOgC"}