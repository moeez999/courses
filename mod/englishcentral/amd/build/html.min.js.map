{"version":3,"file":"html.min.js","sources":["../src/html.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * load object to produce HTML tags\n *\n * @module      mod_englishcentral/html\n * @category    output\n * @copyright   Gordon Bateson\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since       2.9\n */\ndefine([], function() {\n\n    /** @alias module:mod_englishcentral/html */\n    var HTML = {};\n\n    // RegExp to clean non-alphanumeric chars from a string\n    HTML.nonalphanumeric = new RegExp(\"[^a-zA-Z0-9_-]+\", \"g\");\n\n    HTML.htmlescape = function(value) {\n        value += \"\"; // convert to String\n        return value.replace(new RegExp(\"&\", \"g\"), \"&amp;\")\n            .replace(new RegExp(\"'\", \"g\"), \"&apos;\")\n            .replace(new RegExp('\"', \"g\"), \"&quot;\")\n            .replace(new RegExp(\"<\", \"g\"), \"&lt;\")\n            .replace(new RegExp(\">\", \"g\"), \"&gt;\");\n    };\n\n    HTML.attribute = function(name, value) {\n        var attr = name.replace(HTML.nonalphanumeric, \"\");\n        if (attr) {\n            attr = \" \" + attr + '=\"' + HTML.htmlescape(value) + '\"';\n        }\n        return attr;\n    };\n\n    HTML.attributes = function(attr) {\n        var html = \"\";\n        if (attr) {\n            for (var name in attr) {\n                html += HTML.attribute(name, attr[name]);\n            }\n        }\n        return html;\n    };\n\n    HTML.starttag = function(tag, attr) {\n        return \"<\" + tag + HTML.attributes(attr) + \">\";\n    };\n\n    HTML.endtag = function(tag) {\n        return \"</\" + tag + \">\";\n    };\n\n    HTML.emptytag = function(tag, attr) {\n        return \"<\" + tag + HTML.attributes(attr) + \"/>\";\n    };\n\n    HTML.tag = function(tag, content, attr) {\n        return (HTML.starttag(tag, attr) + content + HTML.endtag(tag));\n    };\n\n    HTML.input = function(name, type, attr, id) {\n        attr.type = type;\n        attr.name = name;\n        if (id) {\n            attr.id = id;\n        } else {\n            attr.id = \"id_\" + name;\n        }\n        return HTML.emptytag(\"input\", attr);\n    };\n\n    HTML.hidden = function(name, value) {\n        var attr = {\n            \"value\": (value || \"\")\n        };\n        return HTML.input(name, \"hidden\", attr);\n    };\n\n    HTML.text = function(name, value, size) {\n        var attr = {\n            \"value\": (value || \"\"),\n            \"size\": (size || \"15\")\n        };\n        return HTML.input(name, \"text\", attr);\n    };\n\n    HTML.checkbox = function(name, checked) {\n        var attr = {\n            \"value\": \"1\"\n        };\n        if (checked) {\n            attr.checked = \"checked\";\n        }\n        return HTML.input(name, \"checkbox\", attr);\n    };\n\n    HTML.alist = function(tag, items) {\n        var alist = \"\";\n        for (var i in items) {\n            alist += HTML.tag(\"li\", items[i]);\n        }\n        return HTML.tag(tag, alist, {});\n    };\n\n    HTML.select = function(name, options, selected, attr) {\n        var html = \"\";\n        for (var value in options) {\n            var a = {\n                \"value\": value\n            };\n            if (value == selected) {\n                a[\"selected\"] = \"selected\";\n            }\n            html += HTML.tag(\"option\", options[value], a);\n        }\n        attr.name = name;\n        attr.id = \"id_\" + name;\n        return HTML.tag(\"select\", html, attr);\n    };\n\n    return HTML;\n});\n"],"names":["define","HTML","nonalphanumeric","RegExp","htmlescape","value","replace","attribute","name","attr","attributes","html","starttag","tag","endtag","emptytag","content","input","type","id","hidden","text","size","checkbox","checked","alist","items","i","select","options","selected","a"],"mappings":";;;;;;;;;AAwBAA,iCAAO,IAAI,eAGHC,KAAO,UAGXA,KAAKC,gBAAkB,IAAIC,OAAO,kBAAmB,KAErDF,KAAKG,WAAa,SAASC,cACvBA,OAAS,IACIC,QAAQ,IAAIH,OAAO,IAAK,KAAM,SACtCG,QAAQ,IAAIH,OAAO,IAAK,KAAM,UAC9BG,QAAQ,IAAIH,OAAO,IAAK,KAAM,UAC9BG,QAAQ,IAAIH,OAAO,IAAK,KAAM,QAC9BG,QAAQ,IAAIH,OAAO,IAAK,KAAM,SAGvCF,KAAKM,UAAY,SAASC,KAAMH,WACxBI,KAAOD,KAAKF,QAAQL,KAAKC,gBAAiB,WAC1CO,OACAA,KAAO,IAAMA,KAAO,KAAOR,KAAKG,WAAWC,OAAS,KAEjDI,MAGXR,KAAKS,WAAa,SAASD,UACnBE,KAAO,MACPF,SACK,IAAID,QAAQC,KACbE,MAAQV,KAAKM,UAAUC,KAAMC,KAAKD,cAGnCG,MAGXV,KAAKW,SAAW,SAASC,IAAKJ,YACnB,IAAMI,IAAMZ,KAAKS,WAAWD,MAAQ,KAG/CR,KAAKa,OAAS,SAASD,WACZ,KAAOA,IAAM,KAGxBZ,KAAKc,SAAW,SAASF,IAAKJ,YACnB,IAAMI,IAAMZ,KAAKS,WAAWD,MAAQ,MAG/CR,KAAKY,IAAM,SAASA,IAAKG,QAASP,aACtBR,KAAKW,SAASC,IAAKJ,MAAQO,QAAUf,KAAKa,OAAOD,MAG7DZ,KAAKgB,MAAQ,SAAST,KAAMU,KAAMT,KAAMU,WACpCV,KAAKS,KAAOA,KACZT,KAAKD,KAAOA,KAERC,KAAKU,GADLA,IAGU,MAAQX,KAEfP,KAAKc,SAAS,QAASN,OAGlCR,KAAKmB,OAAS,SAASZ,KAAMH,WACrBI,KAAO,OACGJ,OAAS,WAEhBJ,KAAKgB,MAAMT,KAAM,SAAUC,OAGtCR,KAAKoB,KAAO,SAASb,KAAMH,MAAOiB,UAC1Bb,KAAO,OACGJ,OAAS,QACViB,MAAQ,aAEdrB,KAAKgB,MAAMT,KAAM,OAAQC,OAGpCR,KAAKsB,SAAW,SAASf,KAAMgB,aACvBf,KAAO,OACE,YAETe,UACAf,KAAKe,QAAU,WAEZvB,KAAKgB,MAAMT,KAAM,WAAYC,OAGxCR,KAAKwB,MAAQ,SAASZ,IAAKa,WACnBD,MAAQ,OACP,IAAIE,KAAKD,MACVD,OAASxB,KAAKY,IAAI,KAAMa,MAAMC,WAE3B1B,KAAKY,IAAIA,IAAKY,MAAO,KAGhCxB,KAAK2B,OAAS,SAASpB,KAAMqB,QAASC,SAAUrB,UACxCE,KAAO,OACN,IAAIN,SAASwB,QAAS,KACnBE,EAAI,OACK1B,OAETA,OAASyB,WACTC,EAAC,SAAe,YAEpBpB,MAAQV,KAAKY,IAAI,SAAUgB,QAAQxB,OAAQ0B,UAE/CtB,KAAKD,KAAOA,KACZC,KAAKU,GAAK,MAAQX,KACXP,KAAKY,IAAI,SAAUF,KAAMF,OAG7BR"}