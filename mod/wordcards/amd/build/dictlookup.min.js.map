{"version":3,"file":"dictlookup.min.js","sources":["../src/dictlookup.js"],"sourcesContent":["/**\n * dictionary lookup\n *\n * @package mod_wordcards\n * @author  Justin Hunt - poodll.com\n * *\n */\n\ndefine(['jquery','core/log','core/ajax','core/templates'], function($,log,ajax,templates) {\n\n    \"use strict\"; // jshint ;_;\n\n    log.debug('Wordcards dictionary lookup: initialising');\n\n    return {\n        init: function (cmid,modid,resultscont) {\n            log.debug('Wordcards dictionary lookup: initialising');\n            this.cmid = cmid;\n            this.modid = modid;\n            this.resultscont = resultscont;\n        },\n\n        update_page: function(alldata){\n            //update the page\n            var that = this;\n            that.resultscont.empty();\n            for(var i = 0; i < alldata.length; i++)\n            {\n                var tdata = alldata[i];\n                templates.render('mod_wordcards/word_wizard_oneresult', tdata).then(\n                    function (html, js) {\n                        that.resultscont.append(html);\n                        templates.runTemplateJS(js);\n                    }\n                );\n            }\n        },\n\n        getwords: function (allwords,sourcelang,definitionslang) {\n            var that = this;\n            var langs = ['ar', 'id', 'zh', 'zh_tw', 'ja', 'ko', 'pt', 'es', 'th', 'vi', 'fr', 'rus'];\n\n            //if we have no words, do nothing\n            if (allwords.trim() === '') {\n                return false;\n            }\n\n            var p = ajax.call([\n                {\n                    methodname: 'mod_wordcards_search_dictionary',\n                    args: {terms: allwords, cmid: that.cmid, sourcelang: sourcelang, targetlangs: definitionslang},\n                    async: false\n                },\n            ])[0];\n\n            p.then(async function(response){\n                var allterms_result = [];\n                //if return code=0, disaster, log and die\n                if (response.success === 0) {\n                    log.debug(response.payload);\n                    return allterms_result;\n                }\n\n\n                    var terms = JSON.parse(response.payload);\n                    for (var i = 0; i < terms.length; i++) {\n                        var theterm = terms[i];\n                        //if a word search failed\n                        if (theterm.count === 0) {\n                            var senses=[];\n                            senses.push({definition: '',sourcedefinition: 'No def. available',\n                                modelsentence: '', senseindex: 0, translations: '{}'})\n                            var tdata = {term: theterm.term, senses: senses, modid: that.modid };\n                            allterms_result.push(tdata);\n\n                        } else {\n                            var tdata = {term: theterm.term, senses: [], modid: that.modid};\n                            for (var sindex in theterm.results) {\n                                var sense = theterm.results[sindex];\n                                //by default its term:English def:English\n                                var sourcedefinition = sense.definition;\n                                var alltrans = {};\n                                for (var ti = 0; ti < langs.length; ti++) {\n                                    alltrans[langs[ti]] = sense['lang_' + langs[ti]];\n                                }\n                                var translations = JSON.stringify(alltrans);\n                                var definition = sourcedefinition;\n                                //if its NOT term:english and def:english, we pull the definition from the translation\n                                if (definitionslang !== \"en\") {\n                                    if (sense.hasOwnProperty('lang_' + definitionslang)) {\n                                        definition = sense['lang_' + definitionslang];\n                                    } else if (definitionslang === 'en') {\n                                        definition = sense.meaning;\n                                    } else {\n                                        definition = 'No translation available';\n                                    }\n                                }\n\n                                //model sentence is only in english (for now)\n                                var modelsentence = sense.example;\n\n\n                                tdata.senses.push({\n                                    definition: definition, sourcedefinition: sourcedefinition,\n                                    modelsentence: modelsentence, senseindex: sindex, translations: translations\n                                });\n                            }//end of results loop\n                            allterms_result.push(tdata);\n                        }\n                    }\n\n                    that.update_page(allterms_result );\n            });//end of promise then\n        },\n\n\n        /*\n            var langs = {\n                \"af\": \"Afrikaans\",\n                \"ar\": \"Arabic\",\n                \"bn\": \"Bangla\",\n                \"bs\": \"Bosnian\",\n                \"bg\": \"Bulgarian\",\n                \"ca\": \"Catalan\",\n                \"cs\": \"Czech\",\n                \"cy\": \"Welsh\",\n                \"da\": \"Danish\",\n                \"de\": \"German\",\n                \"el\": \"Greek\",\n                \"en\": \"English\",\n                \"es\": \"Spanish\",\n                \"et\": \"Estonian\",\n                \"fa\": \"Persian\",\n                \"fi\": \"Finnish\",\n                \"fr\": \"French\",\n                \"ht\": \"Haitian Creole\",\n                \"he\": \"Hebrew\",\n                \"hi\": \"Hindi\",\n                'hr': 'Croatian',\n                'hu': 'Hungarian',\n                'id': 'Indonesian',\n                'is': 'Icelandic',\n                'it': 'Italian',\n                'ja': 'Japanese',\n                'ko': 'Korean',\n                'lt': 'Lithuanian',\n                'lv': 'Latvian',\n                'mww': 'Hmong Daw',\n                'ms': 'Malay',\n                'mt': 'Maltese',\n                'nl': 'Dutch',\n                'nb': 'Norwegian',\n                'pl': 'Polish',\n                'pt': 'Portuguese',\n                'ro': 'Romanian',\n                'ru': 'Russian',\n                'sr-Latn': 'Serbian (Latin)',\n                'sk': 'Slovak',\n                'sl': 'Slovenian',\n                'sv': 'Swedish',\n                'ta': 'Tamil',\n                'th': 'Thai',\n                'tr': 'Turkish',\n                'uk': 'Ukrainian',\n                'ur': 'Urdu',\n                'vi': 'Vietnamese',\n                'zh-Hans': 'Chinese Simplified'\n            }\n*/\n\n    }\n\n});\n\n"],"names":["define","$","log","ajax","templates","debug","init","cmid","modid","resultscont","update_page","alldata","that","this","empty","i","length","tdata","render","then","html","js","append","runTemplateJS","getwords","allwords","sourcelang","definitionslang","langs","trim","call","methodname","args","terms","targetlangs","async","response","allterms_result","success","payload","JSON","parse","theterm","count","senses","push","definition","sourcedefinition","modelsentence","senseindex","translations","term","sindex","results","sense","alltrans","ti","stringify","hasOwnProperty","meaning","example"],"mappings":"AAQAA,kCAAO,CAAC,SAAS,WAAW,YAAY,mBAAmB,SAASC,EAAEC,IAAIC,KAAKC,kBAI3EF,IAAIG,MAAM,6CAEH,CACHC,KAAM,SAAUC,KAAKC,MAAMC,aACvBP,IAAIG,MAAM,kDACLE,KAAOA,UACPC,MAAQA,WACRC,YAAcA,aAGvBC,YAAa,SAASC,aAEdC,KAAOC,KACXD,KAAKH,YAAYK,YACb,IAAIC,EAAI,EAAGA,EAAIJ,QAAQK,OAAQD,IACnC,KACQE,MAAQN,QAAQI,GACpBX,UAAUc,OAAO,sCAAuCD,OAAOE,MAC3D,SAAUC,KAAMC,IACZT,KAAKH,YAAYa,OAAOF,MACxBhB,UAAUmB,cAAcF,SAMxCG,SAAU,SAAUC,SAASC,WAAWC,qBAChCf,KAAOC,KACPe,MAAQ,CAAC,KAAM,KAAM,KAAM,QAAS,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,UAG1D,KAApBH,SAASI,cACF,EAGH1B,KAAK2B,KAAK,CACd,CACIC,WAAY,kCACZC,KAAM,CAACC,MAAOR,SAAUlB,KAAMK,KAAKL,KAAMmB,WAAYA,WAAYQ,YAAaP,iBAC9EQ,OAAO,KAEZ,GAEDhB,MAAKgB,eAAeC,cACdC,gBAAkB,MAEG,IAArBD,SAASE,eACTpC,IAAIG,MAAM+B,SAASG,SACZF,wBAIHJ,MAAQO,KAAKC,MAAML,SAASG,SACvBxB,EAAI,EAAGA,EAAIkB,MAAMjB,OAAQD,IAAK,KAC/B2B,QAAUT,MAAMlB,MAEE,IAAlB2B,QAAQC,MAAa,KACjBC,OAAO,GACXA,OAAOC,KAAK,CAACC,WAAY,GAAGC,iBAAkB,oBAC1CC,cAAe,GAAIC,WAAY,EAAGC,aAAc,WAChDjC,MAAQ,CAACkC,KAAMT,QAAQS,KAAMP,OAAQA,OAAQpC,MAAOI,KAAKJ,OAC7D6B,gBAAgBQ,KAAK5B,WAElB,CACCA,MAAQ,CAACkC,KAAMT,QAAQS,KAAMP,OAAQ,GAAIpC,MAAOI,KAAKJ,WACpD,IAAI4C,UAAUV,QAAQW,QAAS,SAC5BC,MAAQZ,QAAQW,QAAQD,QAExBL,iBAAmBO,MAAMR,WACzBS,SAAW,GACNC,GAAK,EAAGA,GAAK5B,MAAMZ,OAAQwC,KAChCD,SAAS3B,MAAM4B,KAAOF,MAAM,QAAU1B,MAAM4B,SAE5CN,aAAeV,KAAKiB,UAAUF,UAC9BT,WAAaC,iBAEO,OAApBpB,kBAEImB,WADAQ,MAAMI,eAAe,QAAU/B,iBAClB2B,MAAM,QAAU3B,iBACF,OAApBA,gBACM2B,MAAMK,QAEN,gCAKjBX,cAAgBM,MAAMM,QAG1B3C,MAAM2B,OAAOC,KAAK,CACdC,WAAYA,WAAYC,iBAAkBA,iBAC1CC,cAAeA,cAAeC,WAAYG,OAAQF,aAAcA,eAGxEb,gBAAgBQ,KAAK5B,QAI7BL,KAAKF,YAAY2B"}